since bash hashes executables when you run them, if you open a new terminal, run 'fdisk -l' (letting bash hash it), and 
	then run 'sudo ./install.sh', after the install is done, "sudo fdisk" will still run /sbin/fdisk. This can easily
	be fixed outside the script using "hash -r" or "hash -d fdisk", BUT this CANNOT be done from within install.sh
	because scripts run in a different environment than the one that ran them.
	See: http://unix.stackexchange.com/a/5610

The exit code of the fdisk wrapper script is the same as the last, non-zero exit code of the 'fdisk -l $DEVICE' command
	If anyone has a better idea for an exit code for the fdisk wrapper script, let me know

Add instructions for installing fdisk script manually in cases where install.sh fails
	Ex. Embeded systems without basic tools like dirname, which, id, and other small programs I don't test for

If you run the script and it's already installed, ask if they want to remove it

Add functionality to ignore by UUID
	Only partitions have UUIDs - not drives
	Either:
		find out if there's a unique way to identiy hard drives
		OR
		let people put the UUID of any one of a drive's partitions to ignore the whole drive
