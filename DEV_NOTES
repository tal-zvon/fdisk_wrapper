since bash hashes executables when you run them, if you open a new terminal, run 'fdisk -l' (letting bash hash it), and 
	then run 'sudo ./install.sh', after the install is done, "sudo fdisk" will still run /sbin/fdisk. This can easily
	be fixed outside the script using "hash -r" or "hash -d fdisk", BUT this CANNOT be done from within install.sh
	because scripts run in a different environment than the one that ran them.
	See: http://unix.stackexchange.com/a/5610

Add code that exits the fdisk wrapper script with the same exit code as real fdisk
Check if fdisk's stderr still gets written to stderr through my script
Check how LVM logical volumes get handled
	In imitate_fdisk mode - is it the same as regular fdisk?
	In non imitate_fdisk mode - can I have it only show lvm disks if fdisk is new enough to handle LVM?
Test code on:
	CentOS
	Debian
	Alpine
Add instructions for installing fdisk script manually in cases where install.sh fails
	Ex. Embeded systems without tools like fmt, tput, and other small programs I don't test for
Go over all the code before I merge into master

ALWAYS MAKE SURE THAT IF YOU CHANGE get_list_of_devices IN ONE FILE (fdisk or install.sh), YOU DO IT IN THE OTHER TOO!
